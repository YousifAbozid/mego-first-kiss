enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id              String      @id @default(uuid())
    name            String?
    email           String?     @unique
    pictureUrl      String?     @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation String?

    status          UserStatus  @default(VERIFIED)

    // this is the role of the user for the application
    globalRole      String      @default('USER')
    password        String?     @password @omit
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt @default(now())

    emailsAsSender  EmailData[] @relation("sender")
    recipients      Recipient[] @relation("user")
    folders         Folder[]    @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model EmailData {

    id          String       @id @default(uuid())
    subject     String?
    content     String?
    status      String?
    isDraft     Boolean
    isRead      Boolean

    senderId    String?
    sender      User?        @relation(fields: [senderId], references: [id], name: "sender")

    recipients  Recipient[]  @relation("email")
    attachments Attachment[] @relation("email")
    folders     Folder[]     @relation("email")
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt @default(now())
    @@allow("all", true)
}

model Recipient {

    id        String     @id @default(uuid())
    type      String?

    emailId   String?
    email     EmailData? @relation(fields: [emailId], references: [id], name: "email")
    userId    String?
    user      User?      @relation(fields: [userId], references: [id], name: "user")

    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt @default(now())
    @@allow("all", true)
}

model Attachment {

    id        String     @id @default(uuid())
    fileName  String?
    fileUrl   String?
    fileSize  String?
    mimeType  String?

    emailId   String?
    email     EmailData? @relation(fields: [emailId], references: [id], name: "email")

    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt @default(now())
    @@allow("all", true)
}

model Folder {

    id        String     @id @default(uuid())
    name      String?

    userId    String?
    user      User?      @relation(fields: [userId], references: [id], name: "user")
    emailId   String?
    email     EmailData? @relation(fields: [emailId], references: [id], name: "email")

    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt @default(now())
    @@allow("all", true)
}

